name: QA Tests

on: pull_request

jobs:
  setup-build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "16.14.2"
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.pull_request.head.sha }}-dist
          retention-days: 1
          path: dist
      - name: Get suites
        id: suites
        run: echo "::set-output name=suites::$(cat cypress.suites.json)"

  checkout-tests-repo:
    runs-on: ubuntu-latest
    outputs:
      suites: ${{ steps.suites.outputs.suites }}
    steps:
      - name: Checkout tests repo
        id: checkout_tests_branch
        uses: actions/checkout@v3
        continue-on-error: true
        with:
          repository: luislongo/paralleltests-tests
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout tests from base branch
        if: steps.checkout_tests_branch.outcome != 'success'
        id: checkout_tests_base
        uses: actions/checkout@v3
        continue-on-error: true
        with:
          repository: luislongo/paralleltests-tests
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.base_ref }}
      - name: Checkout tests from main
        if: steps.checkout_tests_branch.outcome != 'success' && steps.checkout_tests_base.outcome != 'success'
        uses: actions/checkout@v3
        with:
          repository: luislongo/paralleltests-tests
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.pull_request.head.sha }}-tests
          retention-days: 1
          path: "."
      - name: Get suites
        id: suites
        run: echo "::set-output name=suites::$(cat cypress.suites.json)"

  cypress-tests:
    runs-on: ubuntu-latest
    needs: [setup-build, checkout-tests-repo]
    strategy:
      matrix:
        suites: ${{ fromJson(needs.checkout-tests-repo.outputs.suites) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install serve
        run: npm install -g serve
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.pull_request.head.sha }}-dist
          path: dist
      - name: Download tests artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.pull_request.head.sha }}-tests
          path: "cypress"
      - name: Serve
        run: serve -s dist > /dev/null 2>&1 &
      - name: Install cypress
        run: npm install --save-dev cypress
      - name: Run cypress tests
        run: npx cypress run --config baseUrl=http://localhost:3000 --spec 'cypress/e2e/${{ matrix.suites }}'

  cleanup:
    runs-on: ubuntu-latest
    needs: cypress-tests
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: ${{ github.event.pull_request.head.sha }}
